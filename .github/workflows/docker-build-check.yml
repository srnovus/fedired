name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main  # Esto puede cambiar a la rama que prefieras
  pull_request:
    branches:
      - main  # Esto puede cambiar a la rama que prefieras

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Configurar Node.js en la versi贸n que se usa en el Dockerfile
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # Instalar pnpm
    - name: Install pnpm
      run: npm install -g pnpm

    # Instalar dependencias usando pnpm (no congelamos el lockfile en CI)
    - name: Install dependencies
      run: pnpm install --no-frozen-lockfile

    # Verificar que no haya conflictos en el lockfile
    - name: Verify lockfile (optional)
      run: pnpm install --no-frozen-lockfile

    # Construir la imagen Docker (usando la fase de construcci贸n)
    - name: Build Docker image
      run: docker build --file Dockerfile --target build --tag fedired .

    # Crear la imagen de producci贸n (usando la fase de producci贸n)
    - name: Build production Docker image
      run: docker build --file Dockerfile --target production --tag fedired .

    # Login a Docker Hub con las credenciales del repositorio secreto
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Subir la imagen Docker a Docker Hub
    - name: Push Docker image to Docker Hub
      run: docker push fedired
