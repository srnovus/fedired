name: Multi-language Code Validation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  validate:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        language: [node, rust]

    steps:
  - name: Checkout repository
    uses: actions/checkout@v3

  - name: Setup Node.js
    uses: actions/setup-node@v3
    with:
      node-version: '20'

  - name: Install dependencies
    run: npm install --ignore-scripts

      # Paso 3: Instalar dependencias de Node.js
      - name: Install Node.js Dependencies
        if: matrix.language == 'node'
        run: npm install

      # Paso 4: Ejecutar linters y validaciones de Node.js
      - name: Run Linters for TypeScript, Vue, JS, SCSS, Pug
        if: matrix.language == 'node'
        run: |
          npm run lint # Asegúrate de que `lint` esté configurado en package.json para TypeScript, Vue, JS, etc.
          npm run lint:scss # Si tienes scripts separados para SCSS
          npm run lint:pug # Si tienes scripts separados para Pug

      # Paso 5: Configuración de Rust
      - name: Set up Rust
        if: matrix.language == 'rust'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      # Paso 6: Instalar dependencias de Rust
      - name: Install Rust Dependencies
        if: matrix.language == 'rust'
        run: cargo build

      # Paso 7: Ejecutar comprobaciones de Rust
      - name: Run Rust Checks
        if: matrix.language == 'rust'
        run: cargo check
